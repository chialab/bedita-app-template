name: Linting

on:
  pull_request: {}
  push: {}

jobs:
  php-cs:
    name: 'Run PHPCS'
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout current revision'
        uses: 'actions/checkout@v2'
      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '7.4'
          tools: 'composer'
          extensions: 'mbstring, intl'
          coverage: 'none'
      - name: 'Discover Composer cache directory'
        id: 'cachedir'
        run: 'echo "::set-output name=path::$(composer global config cache-dir)"'
      - name: 'Share Composer cache across runs'
        uses: 'actions/cache@v2'
        with:
          path: '${{ steps.cachedir.outputs.path }}'
          key: "composer-${{ github.job }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: |
            composer-${{ github.job }}-
            composer-
      - name: 'Install dependencies with Composer'
        run: 'composer install --prefer-dist --no-interaction'
      - name: 'Run PHP CodeSniffer'
        run: composer run-script cs-check

  php-stan:
    name: 'Run PHP STAN'
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout current revision'
        uses: 'actions/checkout@v2'
      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '7.4'
          tools: 'composer'
          extensions: 'mbstring, intl'
          coverage: 'none'
      - name: 'Discover Composer cache directory'
        id: 'cachedir'
        run: 'echo "::set-output name=path::$(composer global config cache-dir)"'
      - name: 'Share Composer cache across runs'
        uses: 'actions/cache@v2'
        with:
          path: '${{ steps.cachedir.outputs.path }}'
          key: "composer-${{ github.job }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: |
            composer-${{ github.job }}-
            composer-
      - name: 'Install dependencies with Composer'
        run: 'composer install --prefer-dist --no-interaction'
      - name: 'Run PHP STAN'
        run: composer run-script stan
